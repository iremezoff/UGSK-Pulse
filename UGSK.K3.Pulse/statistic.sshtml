var date = new Date();

function currentDate() {
				var dd = date.getDate();
				var mm = date.getMonth()+1; 
				var yyyy = date.getFullYear();
				var hh = date.getHours();
				var MM = date.getMinutes();
				var ss = date.getSeconds();
								 
				return (hh<10?'0'+hh:hh)+':'+(MM<10?'0'+MM:MM)+':'+(ss<10?'0'+ss:ss)+' '+(dd<10?'0'+dd:dd)+'.'+(mm<10?'0'+mm:mm)+'.'+yyyy;                     
            }

var ugskPulse = {

constants: {
    DailyPeriod: 1,
	WeeklyPeriod: 2,
	TotalCounter: 1,
	AverageCounter: 0
}
};

ugskPulse.on = function (domDiv, product, externalDiameter, fontSize, jq) {

	        jq.connection.hub.url = "@Model.ServiceAddress/signalr";

			var div2=d3.select(domDiv);

			var rp2=radialProgress(domDiv)
				.label(product)
                .diameter(externalDiameter)
                .fontSize(fontSize);

				                     // Declare a proxy to reference the hub.
                var chat = jq.connection.statisticHub;
                // Create a function that the hub can call to broadcast messages.
                chat.client.broadcastCounter = function (counter) {
					if(counter.Product!==product)
						return;

					// total daily counter
					if (counter.Kind===ugskPulse.constants.TotalCounter && counter.PeriodKind===ugskPulse.constants.DailyPeriod) {
						rp2.value(counter.Value);
					}
					// average weekly counter
					if (counter.Kind===ugskPulse.constants.AverageCounter && counter.PeriodKind===ugskPulse.constants.WeeklyPeriod) {
						rp2.value2(counter.Value);
					}

					rp2.label(currentDate());
					rp2.render();
                };

                chat.client.broadcastIndex = function (product, value) {
                rp2.maxValue(value).render();
                };

                $.connection.hub.start();

				essential();

	function essential() {
	
            $.ajax({
				method: "GET" ,
				url: "@Model.ServiceAddress/api/counter" ,
				data: { product: product }
            })
            .done(function( counter ) {
				rp2.value(counter.Value);
				$.ajax({
					method: "GET" ,
					url: "@Model.ServiceAddress/api/index" ,
					data: { product: product }
				})
				.done(function( index ) {
					rp2.maxValue(index.Value);
					rp2.maxValue2(index.Value);

					rp2.render();
				});
             }); 

			 $.ajax({
				method: "GET" ,
				url: "@Model.ServiceAddress/api/counter" ,
				data: { product: product, periodKind: 2, counterKind: 0} // Weekly, Average
            })
            .done(function( counter ) {
				rp2.value2(counter.Value);				
             });                     

				}

//				return essential;

}
                







